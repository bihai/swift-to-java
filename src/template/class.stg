import "includes.st"
import "type.stg"
import "util.stg"
import "methods.stg"

extends(parent) ::= "<if(parent)>extends <type(parent)> <endif>"

explode_protocols(list) ::= "<type(first(list))><if(rest(list))><rest(list):{item|, <type(item)>}><endif>"

impl(protocols) ::= "<if(protocols)>implements <explode_protocols(protocols)> <endif>"


static_state(variables) ::= <<
>>


static_behaviour(methods) ::= <<
>>


instance_state(variables) ::= <<
	<if(variables)><variables: {variable | public <variable>;
	}><endif>
>>

instance_behaviour(methods) ::= <<
<if(methods)><methods:instance_method()><endif>
>>

package() ::= "package com.arctouch.generated;"

class(class) ::= <<
<package()>
<includes()>

public class <class.name> <extends(class.parent)><impl(class.protocols)>{
<instance_state(class.instanceState)>
<instance_behaviour(class.instanceFunctions)>
}
>>



